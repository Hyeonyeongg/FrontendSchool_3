@charset 'utf-8';

#app {
    width: 100vw;
    height: 100vh;
    perspective: 1600px;
}

.list-item {
    position: fixed;
    width: 340px;
    height: 400px;
    top: 50%;
    left: 50%;
    /* margin: -200px 0 0 -170px; */ /*width와 hieght 값을 알아야만 사용 가능*/
    transform: translate(-50%, -50%) rotateY(100deg);
    /*top, left 50%를 하면 ul의 왼쪽 끝 지점이 50%로 가기 때문에 정중앙으로 움직이기 위해서는 높이와 넓이의 절반만큼 움직여어 정중앙으로 움직임. 넓이와 높이가 정해지지 않았을 때도 사용할 수 있음.*/
    transform-style: preserve-3d;
}

.list-item li {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%; /*부모의 높이와 넓이만큼 자신의 크기를 차지함.*/
    backface-visibility: hidden;
}

.list-item li img {
    object-fit: contain; /*background-size와 동잃함. cover은 이미지가 손상될수있지만 최대로 이미지를 키움. contain은 이미지가 잘리지 않는 내에서 최대한 비율을 유지하여 배경을 덮는 이미지를 로딩해줌. img태그에서의 background-size임*/
    width: 100%;
    height: 100%; /*li의 그키만큼. 즉, ul의 크기만큼 영역을 차지함. 그런데 이렇게 하면 이미지의 넓이와 높이가 li의 넓이와 높이에 강제로 맞춰져 있기 때문에 이미지의 원본 비율을 맞추기 위해 object-fit: contain 속성을 주면 비율이 원래대로 돌아감*/
}

.list-item li:nth-child(1) {
    transform: rotateY(0) translateZ(calc(340px*7/3.14/2));
}

.list-item li:nth-child(2) {
    transform: rotateY(calc(360deg/7)) translateZ(calc(340px*7/3.14/2));
}

.list-item li:nth-child(3) {
    transform: rotateY(calc(360deg/7*2)) translateZ(calc(340px*7/3.14/2));
}

.list-item li:nth-child(4) {
    transform: rotateY(calc(360deg/7*3)) translateZ(calc(340px*7/3.14/2));
}

.list-item li:nth-child(5) {
    transform: rotateY(calc(360deg/7*4)) translateZ(calc(340px*7/3.14/2));
}

.list-item li:nth-child(6) {
    transform: rotateY(calc(360deg/7*5)) translateZ(calc(340px*7/3.14/2));
}

.list-item li:nth-child(7) {
    transform: rotateY(calc(360deg/7*6)) translateZ(calc(340px*7/3.14/2));
}